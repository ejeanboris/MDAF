import math


def main(args):
    '''
    >>> main([0, 1, 1, 1])
    0.0
    
    #_# dimmensions: 4
	#_# upper: 1
	#_# lower: -1
	#_# minimum: [0, 1, 1, 1]
	#_# opti: 0
    
    
	#_# cm_angle: array([[3.75299977e-01],       [9.16367331e-02],       [3.89890198e-01],       [8.09797236e-02],       [1.16758566e+02],       [2.78473090e+01],       [1.23458075e-02],       [1.11111097e-01],       [0.00000000e+00],       [7.60000000e-02]])
	#_# cm_conv: array([[0.32704403],       [0.16981132],       [0.7672956 ],       [0.2327044 ],       [0.        ],       [0.037     ]])
	#_# cm_grad: array([[0.55759138],       [0.15129977],       [0.        ],       [0.05      ]])
	#_# ela_conv: array([[ 9.84000000e-01],       [ 0.00000000e+00],       [-1.81107191e+12],       [ 1.81107195e+12],       [ 1.00000000e+03],       [ 1.83000000e-01]])
	#_# ela_curv: array([[4.59251014e-03],       [4.59432669e+01],       [7.25903432e+16],       [2.26265004e+02],       [2.25001761e+03],       [2.90361227e+19],       [1.45180613e+18],       [0.00000000e+00],       [1.12825899e+00],       [4.79171886e+01],       [9.64763787e+09],       [4.36604639e+02],       [1.19082182e+04],       [3.63515965e+12],       [1.82331555e+11],       [5.00000000e-03],       [2.00415263e+01],       [6.50203180e+02],       [2.88747261e+29],       [6.19921213e+03],       [7.87865180e+04],       [1.15210157e+32],       [5.76772202e+30],       [2.50000000e-03],       [4.55820000e+04],       [7.60800000e+00]])
	#_# ela_distr: array([[2.22266946e+01],       [4.93011988e+02],       [2.00000000e+00],       [0.00000000e+00],       [3.10000000e-02]])
	#_# ela_local: array([[1.80000000e+02],       [9.00000000e-01],       [8.74382175e-10],       [2.61767590e-02],       [5.00000000e-03],       [5.55865922e-03],       [2.00000000e-02],       [1.26000000e+02],       [2.52000000e+02],       [2.70180000e+02],       [2.79000000e+02],       [2.97000000e+02],       [3.51000000e+02],       [3.70031589e+01],       [5.42160000e+04],       [8.29600000e+00]])
	#_# ela_meta: array([[3.89680793e-03],       [1.85923905e+12],       [2.67768085e+12],       [5.01387923e+12],       [1.87247081e+00],       [2.72361921e-02],       [3.75224754e-03],       [1.19786016e+01],       [5.83302049e-02],       [0.00000000e+00],       [1.30000000e-02]])
	#_# basic: array([[ 4.00000000e+00],       [ 5.00000000e+02],       [-1.00000000e+00],       [-1.00000000e+00],       [ 1.00000000e+00],       [ 1.00000000e+00],       [ 1.66137655e-04],       [ 9.29611415e+14],       [ 3.00000000e+00],       [ 3.00000000e+00],       [ 8.10000000e+01],       [ 8.10000000e+01],       [ 1.00000000e+00],       [ 0.00000000e+00],       [ 1.00000000e-03]])
	#_# disp: array([[ 0.50914018],       [ 0.55768631],       [ 0.68735244],       [ 0.80703134],       [ 0.5012527 ],       [ 0.53109761],       [ 0.65052227],       [ 0.77077511],       [-0.76539352],       [-0.68969595],       [-0.48750867],       [-0.30089438],       [-0.78236498],       [-0.73554846],       [-0.54821177],       [-0.35957594],       [ 0.        ],       [ 0.01      ]])
	#_# limo: array([[ 1.44205073e+14],       [ 1.00491339e-01],       [ 1.44205311e+14],       [ 1.24049908e+15],       [-1.27176047e-12],       [-7.08803604e-02],       [ 5.40668459e+01],       [ 3.65392091e+02],       [ 1.05485027e+01],       [ 1.68505590e+00],       [ 5.30094670e+14],       [ 4.90433891e-01],       [ 0.00000000e+00],       [ 7.50000000e-02]])
	#_# nbc: array([[ 0.81787766],       [ 0.95413745],       [ 0.64535624],       [ 0.07938043],       [-0.03958228],       [ 0.        ],       [ 0.027     ]])
	#_# pca: array([[1.        ],       [1.        ],       [0.2       ],       [1.        ],       [0.26471831],       [0.2647148 ],       [1.        ],       [0.22098215],       [0.        ],       [0.003     ]])
	#_# gcm: array([[1.        ],       [0.01234568],       [0.98765432],       [0.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [0.01234568],       [0.        ],       [0.124     ],       [1.        ],       [0.01234568],       [0.98765432],       [0.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [0.01234568],       [0.        ],       [0.108     ],       [1.        ],       [0.01234568],       [0.98765432],       [0.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [0.01234568],       [0.        ],       [0.106     ]])
	#_# ic: array([[ 0.64944594],       [ 9.85485485],       [26.09346574],       [ 2.38738739],       [ 0.43373494],       [ 0.        ],       [ 0.189     ]])

	#_# Represented: 1

	'''
    for x in args:
        if x < -1 or x > 1:
            return 0
    return (math.exp(-args[0])-args[1])**4+(100*(args[1]-args[2])**6)+(math.tan(args[2]-args[3]))**4+args[0]**8

if __name__ == "__main__":
    import doctest
    doctest.testmod()
