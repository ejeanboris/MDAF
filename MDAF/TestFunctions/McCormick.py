import math
def main(args):
    '''
    >>> main([-0.547, -1.547])
    0
    
    #_# dimmensions: 2 
	#_# upper: [4, 3]
	#_# lower: [-1.5, -3]
	#_# minimum: [-0.547, -1.547]
	#_# opti: 0
    
    
	#_# cm_angle: array([[4.79655921e-01],       [8.11936213e-02],       [4.88211174e-01],       [1.07483727e-01],       [1.33682197e+02],       [3.67619007e+01],       [2.30397221e-01],       [1.37221691e-01],       [0.00000000e+00],       [2.01000000e-01]])
	#_# cm_conv: array([[0.21153846],       [0.26923077],       [0.42307692],       [0.5       ],       [0.        ],       [0.027     ]])
	#_# cm_grad: array([[0.49274828],       [0.20494858],       [0.        ],       [0.109     ]])
	#_# ela_conv: array([[ 5.23000000e-01],       [ 6.40000000e-02],       [-4.33119868e-02],       [ 4.52749148e-01],       [ 1.00000000e+03],       [ 9.30000000e-01]])
	#_# ela_curv: array([[0.00000000e+00],       [6.60123298e-02],       [1.13726422e+00],       [8.27679117e-01],       [2.26227704e+00],       [2.99972944e+00],       [1.07998791e+00],       [0.00000000e+00],       [           nan],       [           nan],       [           nan],       [           nan],       [           nan],       [           nan],       [           nan],       [1.00000000e+00],       [2.34705377e+31],       [1.33653041e+32],       [2.76738243e+43],       [3.06857759e+32],       [1.76598753e+33],       [4.20642129e+45],       [3.41185819e+44],       [2.40000000e-01],       [6.91200000e+03],       [6.00200000e+00]])
	#_# ela_distr: array([[ 0.0181841 ],       [-1.63507361],       [12.        ],       [ 0.        ],       [ 0.061     ]])
	#_# ela_local: array([[9.00000000e+01],       [9.00000000e-01],       [1.39811853e+01],       [2.69896532e-01],       [1.00000000e-02],       [1.11235955e-02],       [1.00000000e-02],       [1.50000000e+01],       [3.50000000e+01],       [3.86500000e+01],       [3.50000000e+01],       [4.00000000e+01],       [9.00000000e+01],       [1.21824306e+01],       [3.95500000e+03],       [2.61600000e+00]])
	#_# ela_meta: array([[7.30261112e-01],       [1.13852108e+00],       [9.51105546e-03],       [7.09257303e-01],       [7.45718818e+01],       [7.29753124e-01],       [7.45345090e-01],       [5.48101514e+01],       [8.54982158e-01],       [0.00000000e+00],       [2.10000000e-02]])
	#_# basic: array([[ 2.00000000e+00],       [ 5.00000000e+02],       [-3.00000000e+00],       [-1.50000000e+00],       [ 3.00000000e+00],       [ 4.00000000e+00],       [-9.13214414e-01],       [ 3.70619827e+00],       [ 6.00000000e+00],       [ 6.00000000e+00],       [ 3.60000000e+01],       [ 3.60000000e+01],       [ 1.00000000e+00],       [ 0.00000000e+00],       [ 8.00000000e-03]])
	#_# disp: array([[ 0.69824464],       [ 0.57516619],       [ 0.60862598],       [ 0.72790887],       [ 0.62815957],       [ 0.51038512],       [ 0.5407675 ],       [ 0.68677358],       [-0.90741644],       [-1.27752888],       [-1.17691106],       [-0.81821236],       [-1.09792521],       [-1.44567528],       [-1.35596587],       [-0.92485687],       [ 0.        ],       [ 0.046     ]])
	#_# limo: array([[ 0.56331375],       [ 0.20065392],       [ 1.2654151 ],       [ 0.70848297],       [ 0.21529824],       [ 0.16062147],       [64.72433949],       [78.56284868],       [19.38461576],       [19.9408798 ],       [ 0.70889543],       [ 0.52253235],       [ 0.        ],       [ 0.129     ]])
	#_# nbc: array([[ 0.09254937],       [ 0.53435349],       [ 0.06239459],       [ 0.39324102],       [-0.12397028],       [ 0.        ],       [ 0.295     ]])
	#_# pca: array([[1.        ],       [1.        ],       [0.66666667],       [0.66666667],       [0.54333567],       [0.50009135],       [0.6210759 ],       [0.61850382],       [0.        ],       [0.006     ]])
	#_# gcm: array([[3.        ],       [0.08333333],       [0.91666667],       [0.47222222],       [0.17149337],       [0.33333333],       [0.31433059],       [0.51417604],       [0.17212984],       [0.08333333],       [0.17592593],       [0.16666667],       [0.27777778],       [0.09755235],       [0.52777778],       [0.16666667],       [0.33333333],       [0.27777778],       [0.55555556],       [0.2003084 ],       [1.        ],       [0.51417604],       [0.02777778],       [0.        ],       [0.057     ],       [3.        ],       [0.08333333],       [0.91666667],       [0.83333333],       [0.24650735],       [0.33333333],       [0.36352909],       [0.38996356],       [0.07634631],       [0.02777778],       [0.05555556],       [0.02777778],       [0.11111111],       [0.04811252],       [0.16666667],       [0.27777778],       [0.33333333],       [0.33333333],       [0.38888889],       [0.05555556],       [1.        ],       [0.38996356],       [0.02777778],       [0.        ],       [0.065     ],       [5.        ],       [0.13888889],       [0.86111111],       [0.38888889],       [0.04852265],       [0.2       ],       [0.08843509],       [0.61095929],       [0.23656898],       [0.02777778],       [0.12222222],       [0.05555556],       [0.41666667],       [0.16620306],       [0.61111111],       [0.02777778],       [0.2       ],       [0.08333333],       [0.58333333],       [0.23107371],       [1.        ],       [0.61095929],       [0.02777778],       [0.        ],       [0.11      ]])
	#_# ic: array([[ 0.65342543],       [ 0.48548549],       [ 0.44120929],       [-0.15515516],       [ 0.35140562],       [ 0.        ],       [ 0.614     ]])

	#_# Represented: 1

	'''
    for args[0] in args:
        if args[0] < -1.5 or args[0] > 4:
            return 0
        if args[1] < -3 or args[1] > 3:
            return 0
    return math.sin(args[0]+args[1])+(args[0]-args[1])**2-(3*args[0]/2)+(5*args[1]/2)+1

