#Import math library
import math


def main(args):
    '''
    >>> (main([0.01,3]) + 0) < 0.001
    True

    #_# dimmensions: 2
	#_# upper: 10
	#_# lower: 0.01
	#_# minimum: [0, 1.39325]
	#_# opti: 0
    
	#_# cm_angle: array([[7.13994878e-01],       [2.04021604e-01],       [7.26144234e-01],       [1.75288688e-01],       [1.18714400e+02],       [2.56929617e+01],       [2.29691859e-01],       [1.84411364e-01],       [0.00000000e+00],       [4.50000000e-02]])
	#_# cm_conv: array([[0.30769231],       [0.34615385],       [0.51923077],       [0.48076923],       [0.        ],       [0.014     ]])
	#_# cm_grad: array([[0.32559195],       [0.1399167 ],       [0.        ],       [0.032     ]])
	#_# ela_conv: array([[ 5.67000000e-01],       [ 0.00000000e+00],       [-5.83334499e-03],       [ 3.94656059e-02],       [ 1.00000000e+03],       [ 1.41000000e-01]])
	#_# ela_curv: array([[2.09782421e-04],       [3.10445933e-02],       [1.24814951e-01],       [1.00555952e-01],       [1.59286817e-01],       [9.15655561e-01],       [1.41777370e-01],       [0.00000000e+00],       [1.00246224e+00],       [1.23391134e+00],       [3.30031514e+01],       [1.64848696e+00],       [2.83895859e+00],       [3.54024800e+03],       [3.02192774e+02],       [0.00000000e+00],       [1.00753890e+00],       [2.04357927e+00],       [3.17496268e+02],       [3.48697875e+00],       [1.16989282e+01],       [5.76141700e+04],       [4.07366133e+03],       [0.00000000e+00],       [8.40000000e+03],       [1.25100000e+00]])
	#_# ela_distr: array([[3.90425118e+00],       [2.23397555e+01],       [1.20000000e+01],       [0.00000000e+00],       [1.80000000e-02]])
	#_# ela_local: array([[9.00000000e+01],       [9.00000000e-01],       [8.96637744e-07],       [1.54478517e-02],       [1.00000000e-02],       [1.11235955e-02],       [1.00000000e-02],       [2.00000000e+01],       [2.50000000e+01],       [3.31000000e+01],       [3.00000000e+01],       [4.00000000e+01],       [7.00000000e+01],       [1.02193123e+01],       [3.40000000e+03],       [4.04000000e-01]])
	#_# ela_meta: array([[0.12972729],       [0.10467623],       [0.00604455],       [0.00616543],       [1.01999874],       [0.18884208],       [0.14639839],       [1.29628423],       [0.25475847],       [0.        ],       [0.008     ]])
	#_# basic: array([[2.00000000e+00],       [5.00000000e+02],       [1.00000000e-02],       [1.00000000e-02],       [1.00000000e+01],       [1.00000000e+01],       [4.80399974e-09],       [6.14179357e-01],       [6.00000000e+00],       [6.00000000e+00],       [3.60000000e+01],       [3.60000000e+01],       [1.00000000e+00],       [0.00000000e+00],       [0.00000000e+00]])
	#_# disp: array([[ 0.80655474],       [ 0.944084  ],       [ 0.98931651],       [ 1.00239241],       [ 0.83291543],       [ 0.92725977],       [ 0.96167909],       [ 0.98859526],       [-1.00968589],       [-0.29185309],       [-0.05576241],       [ 0.01248716],       [-0.85614308],       [-0.37272169],       [-0.19635673],       [-0.05843801],       [ 0.        ],       [ 0.01      ]])
	#_# limo: array([[5.69755302e-03],       [8.78283277e-02],       [4.71205796e-02],       [2.75751683e-02],       [6.25311589e-01],       [4.20168495e-01],       [1.27760750e+01],       [3.78058931e+01],       [1.07115757e+00],       [1.02370744e+00],       [3.87765279e-02],       [7.14316865e-01],       [0.00000000e+00],       [3.30000000e-02]])
	#_# nbc: array([[ 0.1261895 ],       [ 0.73775195],       [ 0.12994374],       [ 0.23723227],       [-0.30515559],       [ 0.        ],       [ 0.031     ]])
	#_# pca: array([[1.        ],       [1.        ],       [0.66666667],       [1.        ],       [0.50704555],       [0.50704511],       [0.50694142],       [0.4590337 ],       [0.        ],       [0.002     ]])
	#_# gcm: array([[6.        ],       [0.16666667],       [0.83333333],       [0.77777778],       [0.0546632 ],       [0.16666667],       [0.18570551],       [0.30845187],       [0.09587695],       [0.02777778],       [0.03703704],       [0.02777778],       [0.05555556],       [0.01434438],       [0.22222222],       [0.02777778],       [0.16666667],       [0.16666667],       [0.36111111],       [0.12171612],       [1.        ],       [0.17756709],       [0.02777778],       [0.        ],       [0.024     ],       [5.        ],       [0.13888889],       [0.86111111],       [0.77777778],       [0.1667842 ],       [0.2       ],       [0.20692636],       [0.22545222],       [0.02728811],       [0.02777778],       [0.04444444],       [0.02777778],       [0.08333333],       [0.0248452 ],       [0.22222222],       [0.13888889],       [0.2       ],       [0.19444444],       [0.27777778],       [0.05343162],       [1.        ],       [0.1667842 ],       [0.02777778],       [0.        ],       [0.023     ],       [4.        ],       [0.11111111],       [0.88888889],       [0.66666667],       [0.07031096],       [0.25      ],       [0.22564623],       [0.47839658],       [0.17971943],       [0.02777778],       [0.08333333],       [0.08333333],       [0.13888889],       [0.06415003],       [0.33333333],       [0.05555556],       [0.25      ],       [0.22222222],       [0.5       ],       [0.19641855],       [1.        ],       [0.30067242],       [0.02777778],       [0.        ],       [0.031     ]])
	#_# ic: array([[ 0.72181626],       [-0.27527528],       [ 0.01750827],       [-1.1961962 ],       [ 0.47389558],       [ 0.        ],       [ 0.171     ]])

	#_# Represented: 1

	'''
    for x in args:
        if( x < 0 or x>10 ): return 100
    return (math.sin(args[0]-args[1])**2 * math.sin(args[0]+args[1])**2)/(math.sqrt(args[0]**2+args[1]**2))

if __name__ == "__main__":
    import doctest
    doctest.testmod()