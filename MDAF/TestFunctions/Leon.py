#Import math library


def main(args):
    '''
	>>> (main([1,1]) + 0) < 0.001
	True


    #_# dimmensions: 2
	#_# upper: 1.2
	#_# lower: -1.2
	#_# minimum: [1, 1]
	#_# opti: 0
    
	#_# cm_angle: array([[2.10542603e-01],       [2.72828609e-02],       [2.13436119e-01],       [2.65579669e-02],       [1.51992391e+02],       [2.94589423e+01],       [1.70644204e-01],       [1.20347799e-01],       [0.00000000e+00],       [4.30000000e-02]])
	#_# cm_conv: array([[0.15384615],       [0.03846154],       [0.96153846],       [0.03846154],       [0.        ],       [0.015     ]])
	#_# cm_grad: array([[0.61595303],       [0.18604517],       [0.        ],       [0.028     ]])
	#_# ela_conv: array([[ 1.00000000e+00],       [ 0.00000000e+00],       [-3.22804188e+01],       [ 3.22804188e+01],       [ 1.00000000e+03],       [ 5.10000000e-02]])
	#_# ela_curv: array([[1.78279061e+00],       [1.16451891e+02],       [2.52239097e+02],       [2.38088464e+02],       [3.62255731e+02],       [6.55510933e+02],       [1.67106250e+02],       [0.00000000e+00],       [1.00002731e+00],       [1.00459719e+00],       [1.20212429e+00],       [1.01160307e+00],       [1.02140902e+00],       [2.03164862e+01],       [1.54951271e+00],       [0.00000000e+00],       [4.68926193e+01],       [4.01827782e+02],       [3.98899501e+02],       [4.02008357e+02],       [4.02157224e+02],       [4.22544636e+02],       [2.68456809e+01],       [0.00000000e+00],       [8.40000000e+03],       [3.89000000e-01]])
	#_# ela_distr: array([[ 1.52929351],       [ 1.74544029],       [12.        ],       [ 0.        ],       [ 0.029     ]])
	#_# ela_local: array([[9.00000000e+01],       [9.00000000e-01],       [2.99314186e-10],       [4.70682836e-02],       [1.10000000e-01],       [1.00000000e-02],       [1.00000000e-02],       [4.50000000e+01],       [5.50000000e+01],       [5.84500000e+01],       [6.00000000e+01],       [6.00000000e+01],       [9.00000000e+01],       [5.80382145e+00],       [5.93500000e+03],       [1.44000000e-01]])
	#_# ela_meta: array([[-5.56482247e-03],       [ 9.54844057e+01],       [ 2.98215620e-01],       [ 3.66171877e+00],       [ 1.22787625e+01],       [ 7.03397803e-01],       [ 2.63864648e-01],       [ 1.04934975e+00],       [ 1.00000000e+00],       [ 0.00000000e+00],       [ 6.00000000e-03]])
	#_# basic: array([[ 2.00000000e+00],       [ 5.00000000e+02],       [-1.20000000e+00],       [-1.20000000e+00],       [ 1.20000000e+00],       [ 1.20000000e+00],       [ 1.49779966e-02],       [ 5.36822922e+02],       [ 6.00000000e+00],       [ 6.00000000e+00],       [ 3.60000000e+01],       [ 3.60000000e+01],       [ 1.00000000e+00],       [ 0.00000000e+00],       [ 0.00000000e+00]])
	#_# disp: array([[ 0.37953991],       [ 0.53302129],       [ 0.70960306],       [ 0.87624411],       [ 0.34748594],       [ 0.46859688],       [ 0.63333187],       [ 0.78061069],       [-0.77797041],       [-0.58552617],       [-0.36411726],       [-0.15517262],       [-0.80323673],       [-0.65415066],       [-0.45136393],       [-0.27006553],       [ 0.        ],       [ 0.009     ]])
	#_# limo: array([[ 2.39839104e+00],       [ 1.01208570e-01],       [ 2.21689468e+02],       [ 1.62392144e+02],       [-9.99739218e-01],       [-9.27939037e-01],       [ 1.14453736e+00],       [ 3.45698635e-01],       [ 1.00869209e+00],       [ 1.01966929e+00],       [ 1.96104882e+02],       [ 7.13420999e-01],       [ 0.00000000e+00],       [ 2.50000000e-02]])
	#_# nbc: array([[ 0.6833929 ],       [ 0.91742318],       [ 0.47692233],       [ 0.13387147],       [-0.1520694 ],       [ 0.        ],       [ 0.026     ]])
	#_# pca: array([[1.        ],       [1.        ],       [0.33333333],       [1.        ],       [0.51039485],       [0.51039466],       [0.99992363],       [0.3439774 ],       [0.        ],       [0.002     ]])
	#_# gcm: array([[1.        ],       [0.02777778],       [0.97222222],       [0.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [0.02777778],       [0.        ],       [0.02      ],       [2.        ],       [0.05555556],       [0.94444444],       [0.83333333],       [0.48352763],       [0.5       ],       [0.5       ],       [0.51647237],       [0.02329546],       [0.08333333],       [0.08333333],       [0.08333333],       [0.08333333],       [0.        ],       [0.16666667],       [0.44444444],       [0.5       ],       [0.5       ],       [0.55555556],       [0.07856742],       [1.        ],       [0.48352763],       [0.02777778],       [0.        ],       [0.02      ],       [1.        ],       [0.02777778],       [0.97222222],       [0.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [1.        ],       [       nan],       [1.        ],       [1.        ],       [0.02777778],       [0.        ],       [0.022     ]])
	#_# ic: array([[ 0.63092359],       [ 2.72772773],       [38.59993618],       [ 2.02702703],       [ 0.33935743],       [ 0.        ],       [ 0.147     ]])

	#_# Represented: 1

	'''
    for x in args:
        if x < -1.2 or x > 1.2:
            return 0
    return (100*(args[1]-args[0])**2)+(1-args[0])**2


if __name__ == "__main__":
    import doctest
    doctest.testmod()